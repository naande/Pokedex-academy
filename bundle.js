!function(n){var e={};function t(o){if(e[o])return e[o].exports;var i=e[o]={i:o,l:!1,exports:{}};return n[o].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=n,t.c=e,t.d=function(n,e,o){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:o})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var i in n)t.d(o,i,function(e){return n[e]}.bind(null,i));return o},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=0)}([function(n,e,t){"use strict";function o(n){var e,t=n.url.split("/")[6];return`\n            <div class="pokemonCard" id="${t}">\n                <img src="${`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-v/black-white/animated/${t}.gif`}">\n                <h3>${e=n.name,e[0].toUpperCase()+e.slice(1).toLowerCase()}</h3>\n            </div>\n        `}t.r(e);let i=document.getElementById("main"),r=0;function u(n,e){var t;(t=n,fetch("https://pokeapi.co/api/v2/pokemon/"+t).then((function(n){return n.json()}))).then((function(n){i.innerHTML=function(n){return`\n        <h1>${n.name}</h1>\n        <button id="back">Back</button>\n        <div>\n        <img src="${n.sprites.other.dream_world.front_default}">\n        </div>\n        <h4>${n.name} is ${n.height} tall</h4>\n        <div>\n        <img src="${n.sprites.front_default}">\n        </div>\n    `}(n),document.getElementById("back").addEventListener("click",(function(){c(e,20)}))}))}function c(n,e){i.innerHTML="\n    <h3>Loading...</h3>\n    ",function(n,e){return fetch(`https://pokeapi.co/api/v2/pokemon?limit=${e}&offset=${n*e}`).then((function(n){return n.json()})).then((function(n){return n.results}))}(n,e).then((function(n){i.innerHTML=function(n,e){return`\n        <h1>My Pokemons</h1>\n        ${0==e?"":'<button id="previous">Previous</button>'}\n        <button id="next">Next</button>\n        <div id="pokemonList">\n        ${n.map(o).join("")}\n        </div>\n    `}(n,r);let t=document.getElementById("previous");t&&t.addEventListener("click",(function(){r--,c(r,e)}));var d=document.getElementById("next");d&&d.addEventListener("click",(function(){r++,c(r,e)})),document.getElementById("pokemonList").childNodes.forEach((function(n){n.addEventListener("click",(function(n){u(n.currentTarget.id)}))}))})).catch((function(n){i.innerHTML=function(n){return`\n    <h3>Unable to get pokemons</h3>\n    <p>${n.message}</p>\n    <p>Check your internet connection</p>\n    `}(n)}))}i.innerHTML='\n        <h1>My Pokedex</h1>\n        <button id="view">View pokemons</button>\n    ',document.getElementById("view").addEventListener("click",(function(){c(r,20)}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3RlbXBsYXRlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2aWNlcy5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImNyZWF0ZVBva2Vtb25DYXJkTWFya3VwIiwicG9rZW1vbiIsInN0ciIsInBva2Vtb25JZCIsInVybCIsInNwbGl0IiwidG9VcHBlckNhc2UiLCJzbGljZSIsInRvTG93ZXJDYXNlIiwibWFpbk5vZGUiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwicmVuZGVyUG9rZW1vbiIsImN1cnJlbnRQYWdlIiwiaWQiLCJmZXRjaCIsInRoZW4iLCJyZXMiLCJqc29uIiwiaW5uZXJIVE1MIiwic3ByaXRlcyIsIm90aGVyIiwiZHJlYW1fd29ybGQiLCJmcm9udF9kZWZhdWx0IiwiaGVpZ2h0IiwiY3JlYXRlUG9rZW1vbk1hcmt1cCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW5kZXJQb2tlbW9ucyIsInBhZ2UiLCJwZXJQYWdlIiwiZGF0YSIsInJlc3VsdHMiLCJmZXRjaFBva2Vtb25zIiwicG9rZW1vbnMiLCJtYXAiLCJqb2luIiwiY3JlYXRlUG9rZW1vbnNNYXJrdXAiLCJwcmV2aW91c0J1dHRvbk5vZGUiLCJuZXh0QnV0dG9uTm9kZSIsImNoaWxkTm9kZXMiLCJmb3JFYWNoIiwiY2hpbGQiLCJldmVudCIsImN1cnJlbnRUYXJnZXQiLCJjYXRjaCIsImVycm9yIiwibWVzc2FnZSIsImNyZWF0ZVBva2Vtb25zRXJyb3JNYXJrdXAiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNOLE9BQU9DLGVBQWViLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RQLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxLQVF2RHJCLEVBQW9Cc0IsRUFBSSxTQUFTRCxFQUFPRSxHQUV2QyxHQURVLEVBQVBBLElBQVVGLEVBQVFyQixFQUFvQnFCLElBQy9CLEVBQVBFLEVBQVUsT0FBT0YsRUFDcEIsR0FBVyxFQUFQRSxHQUE4QixpQkFBVkYsR0FBc0JBLEdBQVNBLEVBQU1HLFdBQVksT0FBT0gsRUFDaEYsSUFBSUksRUFBS1gsT0FB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YnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiaW1wb3J0IHsgXHJcbiAgICBnZXRDYXBpdGFsaXplZCxcclxuICAgIGdldElkRnJvbVVybCxcclxuICAgIGdldEFuaW1hdGVkU2hpbnlJbWFnZUZyb21JZFxyXG4gfSBmcm9tICcuL3V0aWxzJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVIb21lTWFya3VwKCkge1xyXG4gICAgcmV0dXJuIGBcclxuICAgICAgICA8aDE+TXkgUG9rZWRleDwvaDE+XHJcbiAgICAgICAgPGJ1dHRvbiBpZD1cInZpZXdcIj5WaWV3IHBva2Vtb25zPC9idXR0b24+XHJcbiAgICBgO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUG9rZW1vbkNhcmRNYXJrdXAocG9rZW1vbikge1xyXG4gICAgdmFyIHBva2Vtb25JZCA9IGdldElkRnJvbVVybChwb2tlbW9uLnVybCk7XHJcbiAgICB2YXIgaW1hZ2VVcmwgPSBnZXRBbmltYXRlZFNoaW55SW1hZ2VGcm9tSWQocG9rZW1vbklkKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGBcclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBva2Vtb25DYXJkXCIgaWQ9XCIke3Bva2Vtb25JZH1cIj5cclxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiJHtpbWFnZVVybH1cIj5cclxuICAgICAgICAgICAgICAgIDxoMz4ke2dldENhcGl0YWxpemVkKHBva2Vtb24ubmFtZSl9PC9oMz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgYDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBva2Vtb25zTWFya3VwKHBva2Vtb25zLCBjdXJyZW50UGFnZSkge1xyXG4gICAgbGV0IHBva2Vtb25MaXN0ID0gcG9rZW1vbnNcclxuICAgICAgICAubWFwKGNyZWF0ZVBva2Vtb25DYXJkTWFya3VwKVxyXG4gICAgICAgIC5qb2luKFwiXCIpO1xyXG5cclxuICAgIGxldCBpc0ZpcnN0UGFnZSA9IGN1cnJlbnRQYWdlID09IDA7XHJcblxyXG4gICAgcmV0dXJuIGBcclxuICAgICAgICA8aDE+TXkgUG9rZW1vbnM8L2gxPlxyXG4gICAgICAgICR7aXNGaXJzdFBhZ2UgPyBcIlwiIDogYDxidXR0b24gaWQ9XCJwcmV2aW91c1wiPlByZXZpb3VzPC9idXR0b24+YH1cclxuICAgICAgICA8YnV0dG9uIGlkPVwibmV4dFwiPk5leHQ8L2J1dHRvbj5cclxuICAgICAgICA8ZGl2IGlkPVwicG9rZW1vbkxpc3RcIj5cclxuICAgICAgICAke3Bva2Vtb25MaXN0fVxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgYDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBva2Vtb25NYXJrdXAocG9rZW1vbikge1xyXG4gICAgcmV0dXJuIGBcclxuICAgICAgICA8aDE+JHtwb2tlbW9uLm5hbWV9PC9oMT5cclxuICAgICAgICA8YnV0dG9uIGlkPVwiYmFja1wiPkJhY2s8L2J1dHRvbj5cclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgIDxpbWcgc3JjPVwiJHtwb2tlbW9uLnNwcml0ZXMub3RoZXIuZHJlYW1fd29ybGQuZnJvbnRfZGVmYXVsdH1cIj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8aDQ+JHtwb2tlbW9uLm5hbWV9IGlzICR7cG9rZW1vbi5oZWlnaHR9IHRhbGw8L2g0PlxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgPGltZyBzcmM9XCIke3Bva2Vtb24uc3ByaXRlcy5mcm9udF9kZWZhdWx0fVwiPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgYDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBva2Vtb25zTG9hZGluZ01hcmt1cCgpIHtcclxuICAgIHJldHVybiBgXHJcbiAgICA8aDM+TG9hZGluZy4uLjwvaDM+XHJcbiAgICBgO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUG9rZW1vbnNFcnJvck1hcmt1cChlcnJvcikge1xyXG4gICAgcmV0dXJuIGBcclxuICAgIDxoMz5VbmFibGUgdG8gZ2V0IHBva2Vtb25zPC9oMz5cclxuICAgIDxwPiR7ZXJyb3IubWVzc2FnZX08L3A+XHJcbiAgICA8cD5DaGVjayB5b3VyIGludGVybmV0IGNvbm5lY3Rpb248L3A+XHJcbiAgICBgO1xyXG59IiwiZXhwb3J0IGZ1bmN0aW9uIGdldENhcGl0YWxpemVkKHN0cikge1xyXG4gICAgcmV0dXJuIHN0clswXS50b1VwcGVyQ2FzZSgpICsgc3RyLnNsaWNlKDEpLnRvTG93ZXJDYXNlKCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRJZEZyb21VcmwodXJsKSB7XHJcbiAgICByZXR1cm4gdXJsLnNwbGl0KFwiL1wiKVs2XTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEFuaW1hdGVkU2hpbnlJbWFnZUZyb21JZChpZCkge1xyXG4gICAgcmV0dXJuIGBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vUG9rZUFQSS9zcHJpdGVzL21hc3Rlci9zcHJpdGVzL3Bva2Vtb24vdmVyc2lvbnMvZ2VuZXJhdGlvbi12L2JsYWNrLXdoaXRlL2FuaW1hdGVkLyR7aWR9LmdpZmA7XHJcbn0iLCJpbXBvcnQge1xyXG4gICAgZmV0Y2hQb2tlbW9uLFxyXG4gICAgZmV0Y2hQb2tlbW9uc1xyXG59IGZyb20gJy4vc2VydmljZXMnO1xyXG5cclxuaW1wb3J0IHtcclxuICAgIGNyZWF0ZUhvbWVNYXJrdXAsXHJcbiAgICBjcmVhdGVQb2tlbW9uc01hcmt1cCxcclxuICAgIGNyZWF0ZVBva2Vtb25NYXJrdXAsXHJcbiAgICBjcmVhdGVQb2tlbW9uc0xvYWRpbmdNYXJrdXAsXHJcbiAgICBjcmVhdGVQb2tlbW9uc0Vycm9yTWFya3VwXHJcbn0gZnJvbSAnLi90ZW1wbGF0ZXMnO1xyXG5cclxuXHJcbmxldCBtYWluTm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcclxuXHJcbmxldCBjdXJyZW50UGFnZSA9IDA7XHJcbnZhciBwZXJQYWdlID0gMjA7XHJcblxyXG5cclxuZnVuY3Rpb24gcmVuZGVyUG9rZW1vbihwb2tlbW9uSWQsIGN1cnJlbnRQYWdlKSB7XHJcbiAgICBmZXRjaFBva2Vtb24ocG9rZW1vbklkKVxyXG4gICAgLnRoZW4oZnVuY3Rpb24gKHBva2Vtb24pIHtcclxuICAgICAgICBtYWluTm9kZS5pbm5lckhUTUwgPSBjcmVhdGVQb2tlbW9uTWFya3VwKHBva2Vtb24pO1xyXG5cclxuICAgICAgICBsZXQgYmFja0J1dHRvbk5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJhY2tcIik7XHJcbiAgICAgICAgYmFja0J1dHRvbk5vZGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgcmVuZGVyUG9rZW1vbnMoY3VycmVudFBhZ2UsIHBlclBhZ2UpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbmRlclBva2Vtb25zKHBhZ2UsIHBlclBhZ2UpIHtcclxuICAgIG1haW5Ob2RlLmlubmVySFRNTCA9IGNyZWF0ZVBva2Vtb25zTG9hZGluZ01hcmt1cCgpO1xyXG4gICAgXHJcbiAgICBmZXRjaFBva2Vtb25zKHBhZ2UsIHBlclBhZ2UpXHJcbiAgICAudGhlbihmdW5jdGlvbiAocG9rZW1vbnMpIHtcclxuICAgICAgICBtYWluTm9kZS5pbm5lckhUTUwgPSBjcmVhdGVQb2tlbW9uc01hcmt1cChwb2tlbW9ucywgY3VycmVudFBhZ2UpOyAgICAgICAgICAgICAgIFxyXG5cclxuICAgICAgICBsZXQgcHJldmlvdXNCdXR0b25Ob2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcmV2aW91c1wiKTtcclxuICAgICAgICBpZiAocHJldmlvdXNCdXR0b25Ob2RlKSB7XHJcbiAgICAgICAgICAgIHByZXZpb3VzQnV0dG9uTm9kZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBjdXJyZW50UGFnZS0tO1xyXG4gICAgICAgICAgICByZW5kZXJQb2tlbW9ucyhjdXJyZW50UGFnZSwgcGVyUGFnZSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICB2YXIgbmV4dEJ1dHRvbk5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5leHRcIik7XHJcbiAgICAgICAgaWYgKG5leHRCdXR0b25Ob2RlKSB7XHJcbiAgICAgICAgICAgIG5leHRCdXR0b25Ob2RlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIGN1cnJlbnRQYWdlKys7XHJcbiAgICAgICAgICAgIHJlbmRlclBva2Vtb25zKGN1cnJlbnRQYWdlLCBwZXJQYWdlKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcblxyXG4gICAgICAgIHZhciBwb2tlbW9uTGlzdE5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBva2Vtb25MaXN0XCIpO1xyXG4gICAgICAgIHBva2Vtb25MaXN0Tm9kZS5jaGlsZE5vZGVzLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7XHJcbiAgICAgICAgICAgIGNoaWxkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcG9rZW1vbklkID0gZXZlbnQuY3VycmVudFRhcmdldC5pZDtcclxuICAgICAgICAgICAgICAgIHJlbmRlclBva2Vtb24ocG9rZW1vbklkKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikge1xyXG4gICAgICAgIG1haW5Ob2RlLmlubmVySFRNTCA9IGNyZWF0ZVBva2Vtb25zRXJyb3JNYXJrdXAoZXJyb3IpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbmRlckhvbWUoKSB7XHJcbiAgICBtYWluTm9kZS5pbm5lckhUTUwgPSBjcmVhdGVIb21lTWFya3VwKCk7XHJcblxyXG4gICAgdmFyIHZpZXdCdXR0b25Ob2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWV3XCIpO1xyXG4gICAgdmlld0J1dHRvbk5vZGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmVuZGVyUG9rZW1vbnMoY3VycmVudFBhZ2UsIHBlclBhZ2UpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbnJlbmRlckhvbWUoKTsiLCJleHBvcnQgZnVuY3Rpb24gZmV0Y2hQb2tlbW9uKGlkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYGh0dHBzOi8vcG9rZWFwaS5jby9hcGkvdjIvcG9rZW1vbi8ke2lkfWApXHJcbiAgICAudGhlbihmdW5jdGlvbiAocmVzKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGZldGNoUG9rZW1vbnMocGFnZSwgcGVyUGFnZSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGBodHRwczovL3Bva2VhcGkuY28vYXBpL3YyL3Bva2Vtb24/bGltaXQ9JHtwZXJQYWdlfSZvZmZzZXQ9JHtwYWdlKnBlclBhZ2V9YClcclxuICAgIC50aGVuKGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgIH0pXHJcbiAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgIHJldHVybiBkYXRhLnJlc3VsdHM7XHJcbiAgICB9KTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0=